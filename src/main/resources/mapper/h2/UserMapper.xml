<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- MapperとXMLのマッピング -->
<mapper namespace="com.example.repository.UserMapper">
	<resultMap type="com.example.domain.user.model.MUser"
		id="user">
		<id column="user_id" property="userId" />
		<result column="password" property="password" />
		<result column="user_name" property="userName" />
		<result column="birthday" property="birthday" />
		<result column="age" property="age" />
		<result column="gender" property="gender" />
		<result column="department_id" property="departmentId" />
		<result column="role" property="role" />
		<association property="department" resultMap="department" />
		<collection property="salaryList" resultMap="salary"
			columnPrefix="salary_"></collection>
	</resultMap>
	<resultMap type="com.example.domain.user.model.Department"
		id="department">
		<id column="department_id" property="departmentId" />
		<result column="department_name" property="departmentName" />
	</resultMap>
	<resultMap type="com.example.domain.user.model.Salary"
		id="salary">
		<id column="user_id" property="userId" />
		<id column="year_month" property="yearMonth" />
		<result column="salary" property="salary" />
	</resultMap>

	<!-- ユーザー１件登録 -->
	<insert id="insertOne">
		insert into m_user(
			user_id,
			password,
			user_name,
			birthday,
			age,
			gender,
			department_id,
			role
		)
		values(
			#{userId},
			#{password},
			#{userName},
			#{birthday},
			#{age},
			#{gender},
			#{departmentId},
			#{role}
		)
	</insert>
	<select id="findMany" resultType="MUser">
		select
			*
		from
			m_user
		<where>
			<if test="userId!=null">
				user_id like '%' || #{userId} || '%'
			</if>
			<if test="userName!=null">
				and user_name like '%' || #{userName} || '%'
			</if>
		</where>
	</select>
	<select id="findOne" resultMap="user">
		select
			mu.user_id,
			mu.password,
			mu.user_name,
			mu.birthday,
			mu.age,
			mu.gender,
			md.department_id,
			md.department_name,
			ts.user_id as salary_user_id,
			ts.year_month as salary_year_month,
			ts.salary as salary_salary
		from
			m_user mu
				left join m_department md
					on mu.department_id = md.department_id
				left join t_salary ts
					on mu.user_id = ts.user_id
		where
			mu.user_id = #{userId}
	</select>
	<update id="updateOne">
		update
			m_user
		set
			password = #{password},
			user_name = #{userName}
		where
			user_id = #{userId}
	</update>
	<delete id="deleteOne">
		delete from
			m_user
		where
			user_id = #{userId}
	</delete>
	<select id="findLoginUser" resultType="MUser">
		select
			*
		from
			m_user
		where
			user_id = #{userId}
	</select>
</mapper>
